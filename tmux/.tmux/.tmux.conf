# cat << EOF > /dev/null
# https://github.com/ashutoshdtu/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2020— Ashutosh Mishra (@ashutoshdtu).
# /!\ do not edit this file
#     instead, override settings in ~/.tmux.conf.local, see README.md

# ==========================
#      General settings  
# ==========================

#set -g default-terminal "screen-256color" # colors!
set -g default-terminal "xterm-256color" # colors!
set-option -ga terminal-overrides ',st-256color:Tc'
set-option -ga terminal-overrides ',xterm-256color:Tc' # hterm (ChromeOS)
# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
set-option -ga terminal-overrides ',xterm*:XT'
# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
# http://stackoverflow.com/questions/15195624
set-option -ga terminal-overrides ',st-256color:smkx=\E='

setw -g xterm-keys on
set -s escape-time 0                      # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 20000                 # boost history
set -g buffer-limit 20

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Tmux Config reloaded\"'"

# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Tmux config reloaded"

# turn it on to exit shell when the command run is done.
# set -g remain-on-exit off

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

# setw -g allow-rename off
# setw -g automatic-rename off
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 1000 # slightly longer pane indicators display time
set -g display-time 1200      # slightly longer status messages display time

set -g status-interval 5      # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# aggressively resize current window
setw -g aggressive-resize on

# enable scroll with mouse support
set -g mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind }    # swap-pane -D
unbind {    # swap-pane -U
unbind [    # paste-buffer
unbind ]    
unbind "'"  # select-window
#unbind n    # next-window
#unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer 
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left


# -- navigation ----------------------------------------------------------------

# create session and window (retaining cwd)
bind C-c new-session
bind c new-window -c "#{pane_current_path}"

# Prompt to rename session and window right after it's created
set-hook -g after-new-session 'command-prompt -I "#{session_name}" "rename-session '%%'"'
#set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# List sessions and windows
bind l list-windows 	# list all windows
bind L list-panes 		# list panes in current window
bind '"' choose-tree 		# tree view of all panes
bind S list-sessions	# list all sessions

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'
# TODO: find windows (using fzf and also for panes)
#bind f command-prompt -p find-window

# split current window horizontally
bind | split-window -h
bind \ split-window -h
# split current window vertically
bind _ split-window -v
bind - split-window -v

# pane navigation
# Special global keybindings
#bind -n M+Up select-pane -U
#bind -n M+Down select-pane -D
#bind -n M+Left select-pane -L
#bind -n M+Right select-pane -R

#bind -r h select-pane -L  # move left
#bind -r j select-pane -D  # move down
#bind -r k select-pane -U  # move up
#bind -r l select-pane -R  # move right

bind -r Left select-pane -L  # move left
bind -r Down select-pane -D  # move down
bind -r Up select-pane -U  # move up
bind -r Right select-pane -R  # move right

#bind -n C-Tab select-pane -t :.+
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Zoom pane
bind + resize-pane -Z
# maximize current pane
# bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
#bind -r H resize-pane -L 2
#bind -r J resize-pane -D 2
#bind -r K resize-pane -U 2
#bind -r L resize-pane -R 2
bind -r C-Up resize-pane -U 2
bind -r C-Down resize-pane -D 2
bind -r C-Left resize-pane -L 2
bind -r C-Right resize-pane -R 2


# Link window
#bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# window navigation
#bind -r p previous-window
#bind -r n next-window
bind -r C-[ previous-window
bind -r C-] next-window
bind -n C-M-Left previous-window
bind -n C-M-Right next-window

bind -r Tab last-window   # cycle thru MRU tabs
bind C-a last-window

#bind -r C-h previous-window # select previous window
#bind -r C-l next-window     # select next window

# to make typing ‘abc’ run the list-keys
# bind -Ttable2 c list-keys
# bind -Ttable1 b switch-client -Ttable2
# bind -Troot   a switch-client -Ttable1

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# Kill pane/window/session shortcuts
bind x kill-pane
bind X confirm-before -p "kill window? (y/n)" "kill-window"
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'


# -- urlview -------------------------------------------------------------------

bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"


# -- facebook pathpicker -------------------------------------------------------

bind F run "cut -c3- ~/.tmux.conf | sh -s _fpp #{pane_id}"

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# -- user defined overrides ----------------------------------------------------

if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'


# -- 8< ------------------------------------------------------------------------

run 'cut -c3- ~/.tmux.conf | sh -s _apply_configuration'
run -b '[ -z "#{window_active}" ] && [ -z "#{version}" ] && tmux set display-time 3000 \; display "This configuration will soon require tmux >= 2.4" \; set -u display-time || true'

