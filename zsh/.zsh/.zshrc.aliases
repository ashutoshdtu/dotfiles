#!/usr/bin/env zsh

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

if type fdfind > /dev/null; then
	alias fd='fdfind'
fi

if type nvim > /dev/null; then
	alias vim='nvim'
fi

eval $(thefuck --alias fuck)
alias du-summary='du -h -s * | sort -nr'
alias docker-prune='sudo docker system prune -a'

# alias grep='rgrep'
alias i='navi'
# alias cat='bat'
alias bat='bat --color=always'
alias bat-themes='bat --list-themes | grep "Theme:" | no-color | sed "s/Theme:\ //" | fzf --no-height --preview="bat --theme={} --color=always ~/.zshrc"'
alias no-color='sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g"'

# alias icat='fzf --preview="preview {}"'

alias files='ranger'
alias browse-files='ranger'
alias ils='ranger' # interactive ls

# alias ls-search='fzf'
alias search-files='fzf'

# alias exa to l
alias ls='ls --color=auto --group-directories-first'
# alias ls='exa --group-directories-first --color-scale --color=always'
alias l='exa -lbhF --git --group-directories-first --color-scale --color=always' # list, size, type, git
alias la='exa -lbhHigmuSa --group-directories-first --color-scale --color=always --time-style=long-iso --git --color-scale'  # all list
alias lx='exa -lbhHigmuSa@ --group-directories-first --color-scale --color=always --time-style=long-iso --git --color-scale' # all + extended list
alias ls-all='exa -lbhHigmuSa --group-directories-first --color-scale --color=always --time-style=long-iso --git --color-scale' # same as la
alias ls-extended='exa -lbhHigmuSa@ --group-directories-first --color-scale --color=always --time-style=long-iso --git --color-scale' # same as lx

# tree views
alias lS='exa -1'  # one column, just names
alias lt='exa -lbhF --git --group-directories-first --color-scale --color=always --tree --level=2'  # tree
alias lst='exa -lbhF --git --group-directories-first --color-scale --color=always --tree --level=2'
alias ls-tree='exa -lbhF --git --group-directories-first --color-scale --color=always --tree --level=2'
alias la-tree='exa -lbhHigmuSa --git --group-directories-first --color-scale --color=always --tree'

# forgit aliases
alias igit='lazygit'
alias git-log='glo'
alias git-diff='gd'
alias git-add='ga'
alias git-reset-head='grh'
alias git-ignore='gi'
alias git-restore='gcf'
alias git-clean='gclean'
alias git-stash-show='gss'

# aliases for lazydocer docker console
alias idocker='sudo lazydocker'
alias docker-manager='sudo lazydocker'
# alias lazyzdocker='sudo docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /home/ashutosh/Dropbox/workspace/services/lazydocker/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'

alias web='browsh'
alias browser='browsh'
alias browse-web='browsh'
# alias browsh='sudo docker run --rm -it browsh/browsh'

alias clear_mosh='pgrep mosh-server | grep -v $(ps -o ppid --no-headers $$) | xargs kill'


####################################
##           Functions            ##
####################################

function colortest() {
	awk 'BEGIN{
	s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
	for (colnum = 0; colnum<77; colnum++) {
		r = 255-(colnum*255/76);
		g = (colnum*510/76);
		b = (colnum*255/76);
		if (g>255) g = 510-g;
			printf "\033[48;2;%d;%d;%dm", r,g,b;
			printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
			printf "%s\033[0m", substr(s,colnum+1,1);
		}
		printf "\n";
	}'
}

function cd() {
    if [[ "$#" != 0 ]]; then
        builtin cd "$@";

        return
    fi
    while true; do
        local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
        local dir="$(printf '%s\n' "${lsd[@]}" |
            fzf --reverse --preview '
                __cd_nxt="$(echo {})";
                __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                echo $__cd_path;
                echo;
                ls -p --color=always "${__cd_path}";
        ')"
        [[ ${#dir} != 0 ]] || return 0
        builtin cd "$dir" &> /dev/null
    done
}

# switch-pane - switch pane (@george-b)
switch-pane() {
  local panes current_window current_pane target target_window target_pane
  panes=$(tmux list-panes -s -F '#I:#P - #{pane_current_path} #{pane_current_command}')
  current_pane=$(tmux display-message -p '#I:#P')
  current_window=$(tmux display-message -p '#I')

  target=$(echo "$panes" | grep -v "$current_pane" | fzf +m --reverse) || return

  target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
  target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}' | cut -c 1)

  if [[ $current_window -eq $target_window ]]; then
    tmux select-pane -t ${target_window}.${target_pane}
  else
    tmux select-pane -t ${target_window}.${target_pane} &&
    tmux select-window -t $target_window
  fi
}

# kill with search if no arguments
kill() {
	if [[ "$#" != 0 ]]; then
        builtin kill "$@";
        return
    fi
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}

fzf-rga() {
	RG_PREFIX="rga --files-with-matches"
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}

